# ЭТО ЕСЛИ ЗАРАЖЕННЫХ УЗЛОВ БОЛЬШЕ 1
"""
SQLite использовать
АНАЛИЗ ВЗАИМНОЙ ПЕРЕПИСКИ МЕЖДУ ДВУМЯ ЛЮДЬМИ
ДОПУСТИМ Я РАССЫЛАЮ А ЧЕЛОВЕК ВСЕ ВРЕМЯ ГАСИТ И НИКОМУ НЕ ПЕРЕСЫЛАЕТ
Каждый день анализ какие не затухают
А потом посмотреть в течение месяца какие не затухали больше всего (долго держались, и
люди по ним)
   НУЖНО ВЫВЕСТИ ПРОЦЕНТ СКОЛЬКО ПОДОЗРИТЕЛЬНЫХ В ОБЩЕЙ НА ЭТОМ УЗЛЕ В ИНТЕРВАЛ
Есть два варианта: угроза на первом узле к моменту анализа затухла (лаг больше 24 часов между последними)
или же нет
1. Затухло:
а. Если затухло позже чем перекинулось на второй:
вывести время начиная с которого угрозы шли параллельно на двух узлах
время затухания на первом
начало на втором
затухание или же последнее сообщение на втором
б. Затухло раньше чем перекинулось на второй
время затухания на первом
начало и затухание (или последнее сообщение) на втором
скорее всего это новый экземпляр

2. Не затухло
предупредить об этом
параллельно или нет
вывести то же самое по второму
"""
def define_thr_distr(node_1,node_2, c_date, threat):
    series_1 = tstamps('Антон','court_threat', '13.04.2019 23:00:00','Vasiliy Bakotin')
    series_2 = tstamps('Лиза Баранова','court_threat', '13.04.2019 23:00:00', 'Антон')

def analyze_nodes(series_1, series_2):
    start_thr = str(series_1[0])
    start_info = '\nНачало распространения угрозы на исследуемом (1) узле: ' + start_thr + '\n'
    fade_1 = fading(series_1)
    intens_1 = intensity(series_1)
    perc_1 = round((intens_1 / 14),2) # ну ты понял
    intens_2 = intensity(series_2)
    perc_2 =  round((intens_2 / 20),2)
    count_info = '\nВсего за рассматриваемый период обнаружено ' + str(intens_1) + ' потенциально опасных сообщений \
    на первом узле и ' + str(intens_2) + ' на втором' + '\nДоля подозрительных сообщений на первом узле - \
    ' + str(perc_1) + '\nДоля подозрительных сообщений на втором узле - ' + str(perc_2)
    
    fade_2 = fading(series_2)
    if fade_1: # если на первом узле было затухание
        if series_2[0] < fade_1:  # если далее перекинулась раньше, чем затухла на первом
            for el in series_1:
                if series_2[0] < el:
                    moment = el
                    break
        
            parallel = 'С момента ' + str(moment) + ' угрозы шли параллельно на двух путях'
            f_inf = 'Затухание на первом узле произошло в момент: ' + str(fade_1)
            follow = '\nВремя начала распространения от второго узла: ' + str(series_2[0])
            if fade_2:
                f_inf_2 = '\nЗатухание на втором узле произошло в момент: ' + str(fade_2)
                
            else:
                f_inf_2 = '\nУгроза активна на втором узле. Последнее подозрительное сообщение: ' + str(series_2[-1])
            ret = count_info + start_info + parallel + follow + f_inf + f_inf_2              
            return ret
        
        elif series_2[0] > fade_1:  # если затухание на первом произошло раньше того как перекинулось
            f_inf = '\nЗатухание на первом узле произошло: ' + str(fade_1)
            follow = '\nВремя начала распространения от второго узла: ' + str(series_2[0])
            if (series_2[0] - series_1[-1]) >= timedelta(0,2600):  # ПАРАМЕТР ЛАГА
                new_ins = '\n(Распространение не параллельное)'
            else:
                new_ins = ''
            if fade_2:
                f_inf_2 = '\nЗатухание на втором узле произошло в момент: ' + str(fade_2)               
            else:
                f_inf_2 = '\nУгроза активна на втором узле. Последнее подозрительное сообщение: ' + str(series_2[-1])
            ret = count_info + start_info + f_inf + follow + new_ins + f_inf_2
            return ret
        
    else: # если на первом еще не затухло
        inf_msg = 'Угроза активна на первом узле. Последнее подозрительное сообщение: ' + str(series_1[-1])
        for el in series_1:
                if series_2[0] < el:
                    moment = el
                    break
        if moment:            
            parallel = 'С момента ' + str(moment) + ' угрозы шли параллельно на двух путях'
        else:
            parallel = ''
            
        follow = '\nВремя начала распространения от второго узла: ' + str(series_2[0])
        if fade_2:
            f_inf_2 = '\nЗатухание на втором узле произошло в момент: ' + str(fade_2)            
        else:
            f_inf_2 = '\nУгроза активна на втором узле. Последнее подозрительное сообщение: ' + str(series_2[-1])
        ret = count_info + start_info + parallel + follow + f_inf + f_inf_2              
        return ret
        
        
            



        
print(analyze_nodes(series_1, series_2))
print('\nНе обнаружены упоминания о персонах или организациях')
